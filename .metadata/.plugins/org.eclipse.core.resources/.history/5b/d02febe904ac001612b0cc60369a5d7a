package Servidor;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Random;

public class ThreadedEchoHandler {
	private Socket ss ;
	private int counter;
	private Banco banco;
	private Random randomN = new Random();
	
	public ThreadedEchoHandler(Socket i, int c, Banco banco) { 
		 this.ss = i;
		 this.counter = c; 
		 this.banco = banco;
		}
	
	public void run() {
	  
	    BufferedReader entrada = null;
	    PrintWriter salida = null;


	    try {
	    
	      // Se bloquea hasta que recibe alguna petición de un cliente
	      // abriendo un socket para el cliente

	    	
	      //socketCliente = socketServidor.accept();
	    	
	      //System.out.println("Connexión acceptada: "+ socketCliente);
	      // Establece canal de entrada
	      entrada = new BufferedReader(new InputStreamReader(ss.getInputStream()));
	      // Establece canal de salida
	      salida = new PrintWriter(new BufferedWriter(new 
		  OutputStreamWriter(ss.getOutputStream())),true);
	      int id;
	      String accion;
	      
	      while (true) {
	    	  id = Integer.parseInt(entrada.readLine());
	    	  accion = entrada.readLine();
	    	  
	    	  if (accion.equals("Fumador")){
	    
					banco.fumar(id);
					Thread.sleep(randomN.nextInt(300));
					banco.dejarFumar(id);
					Thread.sleep(randomN.nextInt(300));
				
	    	  }else{
	    		  int ingrediente = randomN.nextInt(3);
	    		  Thread.sleep(randomN.nextInt(300));
	    		  banco.nuevosIngredientes(ingrediente);
	    	  }
	      }
	    	  
	      }catch (IOException e) {
		    	System.out.println("PEO ACA");
			      System.out.println("IOException: " + e.getMessage());
			    } catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}  
	
	}
}
